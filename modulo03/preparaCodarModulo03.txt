mkdir modulo02
cd modulo02
yarn init -y
yarn add express
mkdir src
cd src
criar arquivos app.js
criar arquivos server.js
criar arquivos routes.js

na raiz do projeto, criar arquivo nodemon.json
yarn add eslint -D
yarn eslint --init
                -To check syntax, find problems, and enforce code style;
                -JavaScript modules (import/export)
                -None of these
                -No
                -Node
                -Use a popular style guide
                -Airbnb: https://github.com/airbnb/javascript
                -JavaScript
                -Yes
                -->Deleta o package-lock.json
                -Roda: yarn
-No .eslintrc.js
  rules: {
    'class-methods-use-this': 'off',
    'no-param-reassign': 'off',
    camelcase: 'off',
    'no-unused-vars': ['error', { argsIgnorePattern: 'next' }],
  },

  --> correção automática do código: src é uma pasta
yarn eslint --fix src --ext .js

--> criar arquivo .editor config
root = true

[*]
indent_style = space
indent_size = 4
charset = utf-8
trim_trailing_whitespace = true
insert_final_newline = true


-->Instalar o sequelize
yarn add sequelize
yarn add sequelize-cli -D

-criar arquivo .sequelizerc
yarn add pg pg-hstore


--criar as migrações
yarn sequelize migration:create --name=create-users

--rodar o docker
docker start database

--criar as tabelas
yarn sequelize db:migrate

--instalar o bcryptjs
yarn add bcryptjs

--jsonwebtoken
yarn add jsonwebtoken

--schema validation:
yarn add yup

-->Upload de arquivos (Multer)
yarn add multer
mkdir tmp (pasta raiz)
/config/multer.js

-->Tabela para guardar as imagens
yarn sequelize migration:create --name=create-files

-->Campo de referência das fotos na tabela users
yarn sequelize migration:create --name=add-avatar-fiels-to-users

-->Tabela de agendamentos
yarn sequelize migration:create --name=create-appointments

-->Rota para todos os prestadores de serviço

-->Rota de agendamentos

-->Biblioteca para tratamento de databas
yarn add date-fns@next
